name: Deploy to GitHub Pages

on:
  push:
    branches:
      # IMPORTANT: Change this if your source code branch is different!
      - main  # Changed from 'source' to 'main' as that's likely your main branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write # Important for pushing to the main branch
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your preferred Node version
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build # Assumes CNAME is in public/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    needs: build # Run after build job is complete
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Placeholder, URL will be set by action
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Deploy the dist folder to the main branch of the *same* repo
          publish_dir: ./dist
          publish_branch: main # Target branch for your username.github.io repo
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy website via GitHub Actions'
          # Keep CNAME and other files not generated by build? Usually false for Vite output.
          keep_files: false 
          # Force push to overwrite history on main branch (necessary for this setup)
          force_orphan: true 
          cname: angshumangupta.com # Explicitly set CNAME here 